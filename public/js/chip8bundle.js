(()=>{"use strict";var e={948:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Chip8=void 0;const r=t(61),i=t(625),a=t(205),_=t(47),n=t(955),o=t(435),S=t(969),h=t(668),m=t(69),A=t(546);s.Chip8=class{display;memory;registers;keyboard;soundCard;disassembler;constructor(e){console.log("Create new chip-8"),this.memory=new i.Memory,this.registers=new a.Registers,this.loadCharSet(),this.loadRom(e),this.keyboard=new _.Keyboard,this.soundCard=new h.SoundCard,this.disassembler=new m.Disassembler,this.display=new r.Display(this.memory)}sleep(e=S.TIMER_60_HERTZ){return new Promise((s=>setTimeout(s,e)))}loadCharSet(){this.memory.memory.set(o.CHAR_SET,n.CHAR_SET_ADDRESS)}loadRom(e){console.assert(e.length+n.LOAD_PROGRAM_ADDRESS<=n.MEMORY_SIZE,"This ROM is too large."),this.memory.memory.set(e,n.LOAD_PROGRAM_ADDRESS),this.registers.PC=n.LOAD_PROGRAM_ADDRESS}async execute(e){const{instruction:s,args:t}=this.disassembler.disassemble(e),r=s?.id;switch(console.log("i",s),console.log("a",t),console.log("id",r),r){case"CLS":this.display.reset();break;case"RET":this.registers.PC=this.registers.stackPop();break;case"JP_ADDR":this.registers.PC=t?.[0];break;case"CALL_ADDR":this.registers.stackPush(this.registers.PC),this.registers.PC=t?.[0];break;case"SE_VX_KK":this.registers.V[t[0]]===t?.[1]&&(this.registers.PC+=2);break;case"SNE_VX_KK":this.registers.V[t[0]]!==t?.[1]&&(this.registers.PC+=2);break;case"SE_VX_VY":this.registers.V[t[0]]===this.registers.V[t[1]]&&(this.registers.PC+=2);break;case"LD_VX_KK":this.registers.V[t[0]]=t[1];break;case"ADD_VX_KK":this.registers.V[t[0]]+=t[1];break;case"LD_VX_VY":this.registers.V[t[0]]=this.registers.V[t[1]];break;case"OR_VX_VY":this.registers.V[t[0]]|=this.registers.V[t[1]];break;case"AND_VX_VY":this.registers.V[t[0]]&=this.registers.V[t[1]];break;case"XOR_VX_VY":this.registers.V[t[0]]^=this.registers.V[t[1]];break;case"ADD_VX_VY":this.registers.V[15]=this.registers.V[t[0]]+this.registers.V[t[1]]>255,this.registers.V[t[0]]+=this.registers.V[t[1]];break;case"SUB_VX_VY":this.registers.V[15]=this.registers.V[t[0]]>this.registers.V[t[1]],this.registers.V[t[0]]-=this.registers.V[t[1]];break;case"SHR_VX_VY":this.registers.V[15]=1&this.registers.V[t[0]],this.registers.V[t[0]]>>=1;break;case"SUBN_VX_VY":this.registers.V[15]=this.registers.V[t[1]]>this.registers.V[t[0]],this.registers.V[t[0]]=this.registers.V[t[1]]-this.registers.V[t[0]];break;case"SHL_VX_VY":this.registers.V[15]=128&this.registers.V[t[0]],this.registers.V[t[0]]<<=1;break;case"SNE_VX_VY":this.registers.V[t[0]]!==this.registers.V[t[1]]&&(this.registers.PC+=2);break;case"LD_I_ADDR":this.registers.I=t[0];break;case"JP_V0_ADDR":this.registers.PC=this.registers.V[0]+t[0];break;case"RND_VX_KK":const e=Math.floor(255*Math.random());this.registers.V[t[0]]=e&t[1];break;case"DRW_VX_VY_N":const r=this.display.drawSprite(this.registers.V[t[0]],this.registers.V[t[1]],this.registers.I,t[2]);this.registers.V[15]=r;break;case"SKP_VX":this.keyboard.isKeydown(this.registers.V[t[0]])&&(this.registers.PC+=2);break;case"SKNP_VX":this.keyboard.isKeydown(this.registers.V[t[0]])||(this.registers.PC+=2);break;case"LD_VX_DT":this.registers.V[t[0]]=this.registers.DT;break;case"LD_VX_K":let i=-1;for(;-1===i;)i=this.keyboard.hasKeydown(),await this.sleep();this.registers.V[t[0]]=i,console.log("got key",this.registers.V[t[0]]);break;case"LD_DT_VX":this.registers.DT=this.registers.V[t[0]];break;case"LD_ST_VX":this.registers.ST=this.registers.V[t[0]];break;case"ADD_I_VX":this.registers.I+=this.registers.V[t[0]];break;case"LD_F_VX":this.registers.I=this.registers.V[t[0]]*A.SPRITE_HIGHT;break;case"LD_B_VX":let a=this.registers.V[t[0]];const _=Math.floor(a/100);a-=100*_;const n=Math.floor(a/10),o=a-10*n;this.memory.memory[this.registers.I]=_,this.memory.memory[this.registers.I+1]=n,this.memory.memory[this.registers.I+2]=o;break;case"LD_I_VX":for(let e=0;e<=t[0];e++)this.memory.memory[this.registers.I+e]=this.registers.V[e];break;case"LD_VX_I":for(let e=0;e<=t[0];e++)this.registers.V[e]=this.memory.memory[this.registers.I+e];break;default:console.log("Instruction with id ${id} not found.",s)}}}},69:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Disassembler=void 0;const r=t(251);s.Disassembler=class{disassemble(e){const s=r.INSTRUCTION_SET.find((s=>(e&s.mask)===s.pattern)),t=s?.arguments.map((s=>(e&s.mask)>>s.shift));return{instruction:s,args:t}}}},61:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Display=void 0;const r=t(435),i=t(546);s.Display=class{screen;context;frameBuffer;memory;constructor(e){console.log("Create a new display"),this.memory=e,this.screen=document.querySelector("canvas"),this.screen.width=i.DISPLAY_WIDTH*i.DISPLAY_MULTIPLAY,this.screen.height=i.DISPLAY_HEIGHT*i.DISPLAY_MULTIPLAY,this.context=this.screen.getContext("2d"),this.context.fillStyle=i.BG_COLOR,this.frameBuffer=[],this.reset()}reset(){for(let e=0;e<i.DISPLAY_HEIGHT;e++){this.frameBuffer.push([]);for(let s=0;s<i.DISPLAY_WIDTH;s++)this.frameBuffer[e].push(0)}this.context.fillRect(0,0,this.screen.width,this.screen.height),this.drawBuffer()}drawBuffer(){for(let e=0;e<i.DISPLAY_HEIGHT;e++){this.frameBuffer.push([]);for(let s=0;s<i.DISPLAY_WIDTH;s++)this.drawPixel(e,s,this.frameBuffer[e][s])}}drawPixel(e,s,t){this.context.fillStyle=t?i.COLOR:i.BG_COLOR,this.context.fillRect(s*i.DISPLAY_MULTIPLAY,e*i.DISPLAY_MULTIPLAY,i.DISPLAY_MULTIPLAY,i.DISPLAY_MULTIPLAY)}drawSprite(e,s,t,a){let _=0;for(let n=0;n<a;n++){const a=this.memory.memory[t+n];for(let t=0;t<r.CHAR_SET_WITH;t++){const r=a&128>>t,o=(e+n)%i.DISPLAY_HEIGHT,S=(s+t)%i.DISPLAY_WIDTH;0!==r&&(1===this.frameBuffer[o][S]&&(_=1),this.frameBuffer[o][S]^=1)}}return this.drawBuffer(),_}}},47:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Keyboard=void 0;const r=t(601);s.Keyboard=class{keys;constructor(){this.keys=new Array(r.NUMBER_OF_KEYS).fill(!1),document.addEventListener("keydown",(e=>this.keydown(e.key))),document.addEventListener("keyup",(e=>this.keyup(e.key)))}keydown(e){const s=r.keyMap.findIndex((s=>s===e.toLowerCase()));s>-1&&(this.keys[s]=!0)}keyup(e){const s=r.keyMap.findIndex((s=>s===e.toLowerCase()));s>-1&&(this.keys[s]=!1)}isKeydown(e){return this.keys[e]}hasKeydown(){return this.keys.findIndex((e=>e))}}},625:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Memory=void 0;const r=t(955);s.Memory=class{memory;constructor(){console.log("Create new memory"),this.memory=new Uint8Array(r.MEMORY_SIZE),this.reset()}reset(){this.memory.fill(0)}setMemory(e,s){this.assertMemory(e),this.memory[e]=s}getMemory(e){return this.assertMemory(e),this.memory[e]}getOpcode(e){return this.getMemory(e)<<8|this.getMemory(e+1)}assertMemory(e){console.assert(e>=0&&e<r.MEMORY_SIZE,"Error trying to access memory at in index ${index}")}}},205:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Registers=void 0;const r=t(955),i=t(969);s.Registers=class{V;I;DT;ST;PC;SP;stack;constructor(){this.V=new Uint8Array(i.NUMBER_OF_REGISTERS),this.I=0,this.DT=0,this.ST=0,this.PC=r.LOAD_PROGRAM_ADDRESS,this.SP=-1,this.stack=new Uint16Array(i.STACK_DEEP),this.reset()}reset(){this.V.fill(0),this.I=0,this.DT=0,this.ST=0,this.PC=r.LOAD_PROGRAM_ADDRESS,this.SP=-1,this.stack.fill(0)}stackPush(e){this.SP++,this.stack[this.SP]=e}stackPop(){const e=this.stack[this.SP];return this.SP--,this.assertStackUnderflow(),e}assertStackOverflow(){console.assert(this.SP<i.STACK_DEEP,"Error stack Overflow")}assertStackUnderflow(){console.assert(this.SP>=-1,"Error stack Underflow")}}},668:(e,s,t)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.SoundCard=void 0;const r=t(901);s.SoundCard=class{soundEnabled;constructor(){if(this.soundEnabled=!1,"AudioContext"in window){const e=new AudioContext,s=new GainNode(e);s.gain.value=r.INITIAL_VOLUME,s.connect(e.destination);let t,i=!1;Object.defineProperties(this,{soundEnabled:{get:function(){return i},set:function(r){r!==i&&(i=r,i?(t=new OscillatorNode(e,{type:"square"}),t.connect(s),t.start()):t.stop())}}})}}enableSound(){this.soundEnabled=!0}disableSound(){this.soundEnabled=!1}}},435:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.CHAR_SET=s.CHAR_SET_WITH=void 0,s.CHAR_SET_WITH=8,s.CHAR_SET=[240,144,144,144,240,32,96,32,32,112,240,16,240,128,240,240,16,240,16,240,144,144,240,16,16,240,128,240,16,240,240,128,240,144,240,240,16,32,64,64,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,224,144,224,144,224,240,128,128,128,240,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128]},546:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.COLOR=s.BG_COLOR=s.SPRITE_HIGHT=s.DISPLAY_MULTIPLAY=s.DISPLAY_HEIGHT=s.DISPLAY_WIDTH=void 0,s.DISPLAY_WIDTH=64,s.DISPLAY_HEIGHT=32,s.DISPLAY_MULTIPLAY=10,s.SPRITE_HIGHT=5,s.BG_COLOR="#000",s.COLOR="#3f6"},251:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.INSTRUCTION_SET=s.MASK_HIGHEST_AND_LOWEST_BYTE=s.MASK_HIGHEST_BYTE=s.MASK_KK=s.MASK_Y=s.MASK_X=s.MASK_N=s.MASK_NNN=void 0,s.MASK_NNN={mask:4095,shift:0},s.MASK_N={mask:15,shift:0},s.MASK_X={mask:3840,shift:8},s.MASK_Y={mask:240,shift:4},s.MASK_KK={mask:255,shift:0},s.MASK_HIGHEST_BYTE=61440,s.MASK_HIGHEST_AND_LOWEST_BYTE=61455,s.INSTRUCTION_SET=[{key:2,id:"CLS",name:"CLS",mask:65535,pattern:224,arguments:[]},{key:3,id:"RET",name:"RET",mask:65535,pattern:238,arguments:[]},{key:4,id:"JP_ADDR",name:"JP",mask:s.MASK_HIGHEST_BYTE,pattern:4096,arguments:[s.MASK_NNN]},{key:5,id:"CALL_ADDR",name:"CALL",mask:s.MASK_HIGHEST_BYTE,pattern:8192,arguments:[s.MASK_NNN]},{key:6,id:"SE_VX_KK",name:"SE",mask:s.MASK_HIGHEST_BYTE,pattern:12288,arguments:[s.MASK_X,s.MASK_KK]},{key:7,id:"SNE_VX_KK",name:"SNE",mask:s.MASK_HIGHEST_BYTE,pattern:16384,arguments:[s.MASK_X,s.MASK_KK]},{key:8,id:"SE_VX_VY",name:"SE",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:20480,arguments:[s.MASK_X,s.MASK_Y]},{key:9,id:"LD_VX_KK",name:"LD",mask:s.MASK_HIGHEST_BYTE,pattern:24576,arguments:[s.MASK_X,s.MASK_KK]},{key:10,id:"ADD_VX_KK",name:"ADD",mask:s.MASK_HIGHEST_BYTE,pattern:28672,arguments:[s.MASK_X,s.MASK_KK]},{key:11,id:"LD_VX_VY",name:"LD",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32768,arguments:[s.MASK_X,s.MASK_Y]},{key:12,id:"OR_VX_VY",name:"OR",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32769,arguments:[s.MASK_X,s.MASK_Y]},{key:13,id:"AND_VX_VY",name:"AND",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32770,arguments:[s.MASK_X,s.MASK_Y]},{key:14,id:"XOR_VX_VY",name:"XOR",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32771,arguments:[s.MASK_X,s.MASK_Y]},{key:15,id:"ADD_VX_VY",name:"ADD",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32772,arguments:[s.MASK_X,s.MASK_Y]},{key:16,id:"SUB_VX_VY",name:"SUB",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32773,arguments:[s.MASK_X,s.MASK_Y]},{key:17,id:"SHR_VX_VY",name:"SHR",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32774,arguments:[s.MASK_X,s.MASK_Y]},{key:18,id:"SUBN_VX_VY",name:"SUBN",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32775,arguments:[s.MASK_X,s.MASK_Y]},{key:19,id:"SHL_VX_VY",name:"SHL",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:32782,arguments:[s.MASK_X,s.MASK_Y]},{key:20,id:"SNE_VX_VY",name:"SNE",mask:s.MASK_HIGHEST_AND_LOWEST_BYTE,pattern:36864,arguments:[s.MASK_X,s.MASK_Y]},{key:21,id:"LD_I_ADDR",name:"LD",mask:s.MASK_HIGHEST_BYTE,pattern:40960,arguments:[s.MASK_NNN]},{key:22,id:"JP_V0_ADDR",name:"JP",mask:s.MASK_HIGHEST_BYTE,pattern:45056,arguments:[s.MASK_NNN]},{key:23,id:"RND_VX_KK",name:"RND",mask:s.MASK_HIGHEST_BYTE,pattern:49152,arguments:[s.MASK_X,s.MASK_KK]},{key:24,id:"DRW_VX_VY_N",name:"DRW",mask:s.MASK_HIGHEST_BYTE,pattern:53248,arguments:[s.MASK_X,s.MASK_Y,s.MASK_N]},{key:25,id:"SKP_VX",name:"SKP",mask:61695,pattern:57502,arguments:[s.MASK_X]},{key:26,id:"SKNP_VX",name:"SKNP",mask:61695,pattern:57505,arguments:[s.MASK_X]},{key:27,id:"LD_VX_DT",name:"LD",mask:61695,pattern:61447,arguments:[s.MASK_X]},{key:27,id:"LD_VX_K",name:"LD",mask:61695,pattern:61450,arguments:[s.MASK_X]},{key:28,id:"LD_DT_VX",name:"LD",mask:61695,pattern:61461,arguments:[s.MASK_X]},{key:29,id:"LD_ST_VX",name:"LD",mask:61695,pattern:61464,arguments:[s.MASK_X]},{key:30,id:"ADD_I_VX",name:"ADD",mask:61695,pattern:61470,arguments:[s.MASK_X]},{key:31,id:"LD_F_VX",name:"LD",mask:61695,pattern:61481,arguments:[s.MASK_X]},{key:32,id:"LD_B_VX",name:"LD",mask:61695,pattern:61491,arguments:[s.MASK_X]},{key:32,id:"LD_I_VX",name:"LD",mask:61695,pattern:61525,arguments:[s.MASK_X]},{key:33,id:"LD_VX_I",name:"LD",mask:61695,pattern:61541,arguments:[s.MASK_X]}]},601:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.keyMap=s.NUMBER_OF_KEYS=void 0,s.NUMBER_OF_KEYS=16,s.keyMap=["1","2","3","q","w","e","a","s","d","x","z","c","4","r","f","v"]},955:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.CHAR_SET_ADDRESS=s.LOAD_PROGRAM_ADDRESS=s.MEMORY_SIZE=void 0,s.MEMORY_SIZE=4095,s.LOAD_PROGRAM_ADDRESS=512,s.CHAR_SET_ADDRESS=0},969:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.TIMER_60_HERTZ=s.STACK_DEEP=s.NUMBER_OF_REGISTERS=void 0,s.NUMBER_OF_REGISTERS=16,s.STACK_DEEP=16,s.TIMER_60_HERTZ=1e3/60},901:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.INITIAL_VOLUME=void 0,s.INITIAL_VOLUME=.3}},s={};function t(r){var i=s[r];if(void 0!==i)return i.exports;var a=s[r]={exports:{}};return e[r](a,a.exports,t),a.exports}(()=>{const e=t(948);document.getElementById("reset")?.addEventListener("click",(()=>{console.log("Reset")}));const s=document.querySelector("select");s?.addEventListener("change",(function(){console.log(s.value)})),async function(){const s=await fetch("./roms/test_opcode.ch8"),t=await s.arrayBuffer(),r=new Uint8Array(t),i=new e.Chip8(r);for(;;)await i.sleep(200),i.registers.DT>0&&(await i.sleep(),i.registers.DT--),i.registers.ST>0&&(i.soundCard.enableSound(),await i.sleep(),i.registers.ST--),0===i.registers.ST&&i.soundCard.disableSound()}()})()})();